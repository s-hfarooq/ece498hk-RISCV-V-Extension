#Collect All Source Files

# TEST_FILES = $(PWD)/src/digitalTimer.sv
# TB_SRCS := $(PWD)/tb/timer_tb.sv

# TEST_FILES = $(PWD)/src/sram_2048_32_wmask_8bit.v $(PWD)/src/qspi.sv $(PWD)/src/storage_controller.sv
# TB_SRCS := $(PWD)/tb/qspi_stub.sv $(PWD)/tb/storage_controller_tb.sv

# TEST_FILES = $(PWD)/src/sram_2048_32_wmask_8bit.v $(PWD)/src/qspi.sv $(PWD)/src/digitalTimer.sv $(PWD)/src/storage_controller.sv $(PWD)/src/mmu.sv 
# TB_SRCS := $(PWD)/tb/qspi_stub.sv $(PWD)/tb/mmu_tb_v2.sv

# xrun -gui -linedebug -access +rwc src/sram_2048_32_wmask_8bit.v src/SPI_Master.v src/SPI_Master_With_Single_CS.v src/storage_controller.sv tb/storage_controller_tb.sv
# xrun -gui -linedebug -access +rwc src/SPI_Master.v src/SPI_Master_With_Single_CS.v tb/spi_test_tb.sv

TEST_FILES = $(PWD)/src/sram_2048_32_wmask_8bit.v $(PWD)/src/qspi.sv $(PWD)/src/digitalTimer.sv $(PWD)/src/storage_controller.sv $(PWD)/src/mmu.sv 
TB_SRCS := $(PWD)/tb/qspi_stub.sv $(PWD)/tb/mmu_tb_v2.sv

# TEST_FILES = $(PWD)/src/qspi.sv
# TB_SRCS := $(PWD)/tb/qspi_stub.sv $(PWD)/tb/qspi_tb.sv

# xrun -gui -linedebug -access +rwc src/sram_2048_32_wmask_8bit.v src/qspi.sv src/storage_controller.sv tb/qspi_stub.sv tb/storage_controller_tb.sv


SRCS := $(TEST_FILES) $(TB_SRCS)
SYNTH_TCL := $(CURDIR)/synthesis.tcl
VCS_FLAGS = -full64 -lca -sverilog +lint=all,noNS -timescale=lns/10ps -debug -kdb -fsdb +liborder +libverbose -assert svaext

.PHONY: clean
.PHONY: run
.PHONY: synth

sim/simv: $(SRCS) $(ASM)
		mkdir -p sim
		cd sim && vcs -R $(SRCS) $(VCS_FLAGS) -msg_config=../warn.config

run: sim/simv $(ASM)
		bin/rv load memory.sh $(ASM) << y
		cd sim && ./simv

synth : $(SRCS)
		mkdir -p synth
		cd synth && dc_shell -f $(SYNTH_TCL)

clean:
		rm -rf sim synth
